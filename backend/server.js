const express = require('express');
const cors = require('cors');
const app = express();
const PORT = 4000;

// CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
app.use(cors({
  origin: ['http://localhost:3000', 'http://localhost:3001'],
  credentials: true
}));

app.use(express.json());

// –†–æ—É—Ç –¥–ª—è —Ç–µ—Å—Ç–∞
app.get('/api/test', (req, res) => {
  res.json({ message: 'Backend MushCase —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 4000!' });
});

// –†–æ—É—Ç –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
app.post('/api/auth/register', (req, res) => {
  const { username, email, password, confirmPassword } = req.body;

  console.log('–ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', { username, email });

  // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
  if (!username || !email || !password) {
    return res.status(400).json({
      success: false,
      message: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!'
    });
  }

  if (password !== confirmPassword) {
    return res.status(400).json({
      success: false,
      message: '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!'
    });
  }

  if (password.length < 6) {
    return res.status(400).json({
      success: false,
      message: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤!'
    });
  }

  // –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
  res.json({
    success: true,
    message: `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${username}!`,
    user: {
      id: Date.now(),
      username,
      email,
      balance: 1500 // –°—Ç–∞—Ä—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
    }
  });
});

// –†–æ—É—Ç –¥–ª—è –≤—Ö–æ–¥–∞
app.post('/api/auth/login', (req, res) => {
  const { email, password } = req.body;

  console.log('–ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞:', { email });

  if (!email || !password) {
    return res.status(400).json({
      success: false,
      message: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!'
    });
  }

  // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞
  res.json({
    success: true,
    message: '–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!',
    user: {
      id: 1,
      username: 'TestUser',
      email,
      balance: 2000
    }
  });
});

// –†–æ—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–µ–π—Å–æ–≤
app.get('/api/cases', (req, res) => {
  const cases = [
    {
      id: 1,
      name: "Operation Bravo Case",
      price: 150,
      image: "https://steamcommunity-a.akamaihd.net/economy/image/-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXH5ApeO4YmlhxYQknCRvCo04DEVlxkKgpou-6kejhz2v_Nfz5H_uO1gb-Gw_alIITck29Y_chOhuDG_Zi72wLnqUBsZjzzLdSSdA49aQ7W8wS5wubxxcjrGXRQKw"
    },
    {
      id: 2,
      name: "Chroma Case",
      price: 120,
      image: "https://steamcommunity-a.akamaihd.net/economy/image/-9a81dlWLwJ2UUGcVs_nsVtzdOEdtWwKGZZLQHTxDZ7I56KU0Zwwo4NUX4oFJZEHLbXH5ApeO4YmlhxYQknCRvCo04DEVlxkKgpou-6kejhz2v_Nfz5H_uO1gb-Gw_alDL_Yh2xY_chOhuDG_Zi72w2jqko4Zz30cNLEcQ9qY13V-Va3x-bqxcjrV1lT3w"
    }
  ];

  res.json(cases);
});

app.listen(PORT, () => {
  console.log(`üöÄ Backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
  console.log(`üåê CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è http://localhost:3000`);
  console.log(`üéÆ MushCase API –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!`);
});
